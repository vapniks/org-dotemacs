* About
Here is an example file to show how org-dotemacs.el works
Each header below has a :NAME: property naming the block, and some have a :DEPENDS: property 
indicating names of blocks that should be loaded before that block. 
Some blocks have tags which can be used in a tag match to select which blocks to load.

You can load all elisp block in this file like this: 
  
(let ((org-dotemacs-error-handling 'retry))
(org-dotemacs-load-file nil "dotemacs-test.org"))

To load just the tagged blocks use: (org-dotemacs-load-file "tag1" "dotemacs-test.org")

Note: you may need to change the path to the files.
* Buffer-wide TODO states
You need a line like the following one somewhere in the file to be able to mark blocks as broken or unused.

#+TODO: BROKEN UNUSED CHECK TODO

You can customize the variables `org-dotemacs-exclude-todo' and `org-dotemacs-include-todo' 
to indicate the effects of these TODO states.

* Block 1
   :PROPERTIES:
   :NAME:     block_1
   :DEPENDS:  block_5 
   :END:
Here is the first block.

#+BEGIN_SRC emacs-lisp
(message "block 1")
#+END_SRC

* Block 2                                                              :tag1:
   :PROPERTIES:
   :NAME:     block_2
   :DEPENDS:  block_1 
   :END:
Here is the second block, it contains a subheading with another code block in it.
#+BEGIN_SRC emacs-lisp
(message "block 2")
#+END_SRC
** Block 2a
   :PROPERTIES:
   :NAME:     block_2a
   :DEPENDS:  block_2 block_1
   :END:
#+BEGIN_SRC emacs-lisp
(message "block 2a")
#+END_SRC

* Block 3
   :PROPERTIES:
   :NAME:     block_3
   :DEPENDS:  block_1 block_2
   :END:
This block depends on blocks 1 and 2 (including 2a).
#+BEGIN_SRC emacs-lisp
(message "block 3")
#+END_SRC

* Block 4
   :PROPERTIES:
   :NAME:     block_4
   :DEPENDS:  block_3
   :DEPENDS:  block_5
   :END:
#+BEGIN_SRC emacs-lisp
(message "block 4")
#+END_SRC
* BROKEN Block 5                                                       :tag1:
   :PROPERTIES:
   :NAME:     block_5
   :END:
This block will not be loaded because the TODO state is set to BROKEN.
#+BEGIN_SRC emacs-lisp
(message "block 5")
#+END_SRC

